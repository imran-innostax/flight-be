name: Dev Build

on:
  push:
    branches:
      - main

jobs:
  buildAndTest:
    name: CI Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16.x']

    steps:
      - uses: actions/checkout@v2

      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        node-version: ['16.x']
        s3-filename: ['dev-aws-codedeploy-${{ github.sha }}']

    needs: buildAndTest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - uses: actions/checkout@v2

      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEV_AWS_REGION }}

      # Deploy push to AWS S3
      - name: AWS Deploy push
        run: |
          aws deploy push \
          --application-name ${{ secrets.DEV_CODE_DEPLOY_APPNAME}} \
          --description "This is a revision for the ${{ secrets.DEV_CODE_DEPLOY_APPNAME }}-${{ github.sha }}" \
          --s3-location s3://${{ secrets.DEV_CODE_DEPLOY_S3_BUCKET }}/${{ matrix.s3-filename }}.zip \
          --source .

      # Create deployment to CodeDeploy
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ secrets.DEV_CODE_DEPLOY_APPNAME}} \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name ${{ secrets.DEV_CODE_DEPLOY_DEPLOYMENT_GROUP }} \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ secrets.DEV_CODE_DEPLOY_S3_BUCKET }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \
