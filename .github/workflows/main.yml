name: Deploy to Cloud Run from Source

on:
  push:
    branches: [ "main" ]
env:
  PROJECT_ID: corded-skill-400111  # TODO: update Google Cloud project id
  SERVICE: deploy-flight-be4 # TODO: update Cloud Run service name
  REGION: asia-south2  # TODO: update Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCR_AUTH }}
      
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If required, update to the appropriate source folder
          source: ./
          env_vars: |
            BE_PORT=${{ secrets.BE_PORT }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
            EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            EMAIL_PORT=${{ secrets.EMAIL_PORT }}
            AMADEUS_API_BASE_URL=${{ secrets.AMADEUS_API_BASE_URL }}
            AMADEUS_CLIENT_ID=${{ secrets.AMADEUS_CLIENT_ID }}
            AMADEUS_GRANT_TYPE=${{ secrets.AMADEUS_GRANT_TYPE }}
            AMADEUS_CLIENT_SECRET=${{ secrets.AMADEUS_CLIENT_SECRET }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            RABBITMQ_SERVER=${{ secrets.RABBITMQ_SERVER }}
            RABBITMQ_IDP_QUEUE=${{ secrets.RABBITMQ_IDP_QUEUE }}
            RABBITMQ_EMAIL_QUEUE=${{ secrets.RABBITMQ_EMAIL_QUEUE }}
            RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
            RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
            BACKEND_DEPLOYED_INSTANCE_URL=${{ secrets.BACKEND_DEPLOYED_INSTANCE_URL }}

      - name: Apply Policy
        run:  gcloud run services add-iam-policy-binding ${{ env.SERVICE }} --member="allUsers" --role="roles/run.invoker" --region=${{ env.REGION }}
  
      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
